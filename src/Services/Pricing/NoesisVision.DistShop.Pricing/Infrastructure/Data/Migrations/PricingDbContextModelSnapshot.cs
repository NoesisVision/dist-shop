// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NoesisVision.DistShop.Pricing.Infrastructure.Data;

#nullable disable

namespace NoesisVision.DistShop.Pricing.Infrastructure.Data.Migrations
{
    [DbContext(typeof(PricingDbContext))]
    partial class PricingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NoesisVision.DistShop.Pricing.Domain.Aggregates.PricingRuleAggregate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedNever()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApplicableProductCategories")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicableProductIds")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal?>("MinimumOrderAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerType");

                    b.HasIndex("IsActive");

                    b.HasIndex("Name");

                    b.HasIndex("Priority");

                    b.HasIndex("ValidFrom", "ValidTo");

                    b.ToTable("PricingRules", (string)null);

                    b.OwnsOne("NoesisVision.DistShop.Pricing.Domain.ValueObjects.PricingStrategy", "Strategy", b1 =>
                        {
                            b1.Property<Guid>("PricingRuleAggregateId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Parameters")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Type")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.Property<decimal>("Value")
                                .HasPrecision(18, 4)
                                .HasColumnType("decimal(18,4)");

                            b1.HasKey("PricingRuleAggregateId");

                            b1.ToTable("PricingRules");

                            b1.WithOwner()
                                .HasForeignKey("PricingRuleAggregateId");
                        });

                    b.Navigation("Strategy")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}