// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NoesisVision.DistShop.Inventory.Infrastructure.Data;

#nullable disable

namespace NoesisVision.DistShop.Inventory.Infrastructure.Data.Migrations
{
    [DbContext(typeof(InventoryDbContext))]
    partial class InventoryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("inventory")
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NoesisVision.DistShop.Inventory.Domain.Aggregates.InventoryItem", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AvailableQuantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaxStockLevel")
                        .HasColumnType("int");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ReorderLevel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LastUpdated")
                        .HasDatabaseName("IX_InventoryItems_LastUpdated");

                    b.HasIndex("ProductId")
                        .IsUnique()
                        .HasDatabaseName("IX_InventoryItems_ProductId");

                    b.ToTable("InventoryItems", "inventory");
                });

            modelBuilder.Entity("NoesisVision.DistShop.Inventory.Domain.Aggregates.InventoryItem", b =>
                {
                    b.OwnsMany("NoesisVision.DistShop.Inventory.Domain.ValueObjects.StockReservation", "Reservations", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("CreatedAt")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime>("ExpiresAt")
                                .HasColumnType("datetime2");

                            b1.Property<Guid>("InventoryItemId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Quantity")
                                .HasColumnType("int");

                            b1.Property<string>("Reference")
                                .HasMaxLength(500)
                                .HasColumnType("nvarchar(500)");

                            b1.Property<Guid>("ReservationId")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("Id");

                            b1.HasIndex("ExpiresAt")
                                .HasDatabaseName("IX_StockReservations_ExpiresAt");

                            b1.HasIndex("InventoryItemId");

                            b1.HasIndex("ReservationId")
                                .IsUnique()
                                .HasDatabaseName("IX_StockReservations_ReservationId");

                            b1.ToTable("StockReservations", "inventory");

                            b1.WithOwner()
                                .HasForeignKey("InventoryItemId");
                        });

                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}