// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NoesisVision.DistShop.Orders.Infrastructure.Data;

#nullable disable

namespace NoesisVision.DistShop.Orders.Infrastructure.Data.Migrations
{
    [DbContext(typeof(OrdersDbContext))]
    partial class OrdersDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("orders")
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NoesisVision.DistShop.Orders.Domain.Aggregates.OrderAggregate", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("_cancellationReason")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("CancellationReason");

                    b.Property<DateTime>("_createdAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<string>("_currency")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasDefaultValue("USD")
                        .HasColumnName("Currency");

                    b.Property<Guid>("_customerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CustomerId");

                    b.Property<string>("_status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Status");

                    b.Property<decimal>("_totalAmount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("TotalAmount");

                    b.Property<DateTime>("_updatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedAt");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "_createdAt" }, "IX_Orders_CreatedAt");

                    b.HasIndex(new[] { "_customerId" }, "IX_Orders_CustomerId");

                    b.HasIndex(new[] { "_customerId", "_status" }, "IX_Orders_CustomerId_Status");

                    b.HasIndex(new[] { "_status" }, "IX_Orders_Status");

                    b.ToTable("Orders", "orders");
                });

            modelBuilder.Entity("NoesisVision.DistShop.Orders.Domain.Aggregates.OrderAggregate", b =>
                {
                    b.OwnsMany("NoesisVision.DistShop.Orders.Domain.ValueObjects.OrderItem", "_items", b1 =>
                        {
                            b1.Property<Guid>("OrderAggregateId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasMaxLength(3)
                                .HasColumnType("nvarchar(3)");

                            b1.Property<Guid>("ProductId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("ProductName")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)");

                            b1.Property<string>("ProductSku")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.Property<int>("Quantity")
                                .HasColumnType("int");

                            b1.Property<decimal>("UnitPrice")
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("OrderAggregateId", "Id");

                            b1.ToTable("Orders", "orders");

                            b1.ToJson("Items");

                            b1.WithOwner()
                                .HasForeignKey("OrderAggregateId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}